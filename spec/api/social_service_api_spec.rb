=begin
#madana-api

#<h1>Using the madana-api</h1>        <p>This documentation contains a Quickstart Guide, relating client functionality and information about the available         endpoints and used datamodels.   </p>       <p> The madana-api and its implementations are still in heavy development. This means that there may be problems in our protocols, or there may be mistakes in our implementations. We take security vulnerabilities very seriously. If you discover a security issue, please bring it to our attention right away! If you find a vulnerability that may affect live deployments -- for example, by exposing a remote execution exploit -- please send your report privately to info@madana.io. Please DO NOT file a public issue. If the issue is a protocol weakness that cannot be immediately exploited or something not yet deployed, just discuss it openly   </p>   <br>   <p> Note: Not all functionality might be acessible without having accquired and api-license token. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a> </p>       <br>

The version of the OpenAPI document: 0.4.14-master.16

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for   MadanaSampleclientRuby::SocialServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SocialServiceApi' do
  before do
    # run before each test
    @api_instance =   MadanaSampleclientRuby::SocialServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SocialServiceApi' do
    it 'should create an instance of SocialServiceApi' do
      expect(@api_instance).to be_instance_of(  MadanaSampleclientRuby::SocialServiceApi)
    end
  end

  # unit tests for get_my_profile
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_my_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_platforms2
  # Returns all Platforms / Systems that can be Connected to the MADANA Service.
  # Returns all Platforms / Systems that can be Connected to the MADANA Service
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_platforms2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ranking
  # Returns the Ranking by PTS within the System.
  # Returns the Ranking by PTS within the System
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_ranking test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_social_platform_feed
  # @param platform 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_social_platform_feed test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_profile
  # @param username 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :simple 
  # @return [File]
  describe 'get_user_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_profile_0
  # @param username 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_user_profile_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
