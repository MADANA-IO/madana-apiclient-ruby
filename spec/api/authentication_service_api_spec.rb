=begin
#madana-api

#<h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>

The version of the OpenAPI document: 0.4.12

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for   MadanaSampleclientRuby::AuthenticationServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AuthenticationServiceApi' do
  before do
    # run before each test
    @api_instance =   MadanaSampleclientRuby::AuthenticationServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthenticationServiceApi' do
    it 'should create an instance of AuthenticationServiceApi' do
      expect(@api_instance).to be_instance_of(  MadanaSampleclientRuby::AuthenticationServiceApi)
    end
  end

  # unit tests for authenticate_application
  # Authenticates a new application and returns the token.
  # Authenticates a new application and returns the token
  # @param [Hash] opts the optional parameters
  # @option opts [JsonMDNCertificate] :body the credentials used to validate the user
  # @return [JsonMDNToken]
  describe 'authenticate_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authenticate_ethereum_wallet
  # @param wallet the wallet which should be authenticated
  # @param [Hash] opts the optional parameters
  # @option opts [JsonMDNOAuthToken] :body Token containing nonce and signate
  # @return [File]
  describe 'authenticate_ethereum_wallet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authenticate_user
  # Authenticates a new user and returns the token (  forbidden if the credentials cannot be validated ).
  # Authenticates a new user and returns the token (  forbidden if the credentials cannot be validated )
  # @param [Hash] opts the optional parameters
  # @option opts [JsonMDNUserCredentials] :body the credentials used to validate the user
  # @return [JsonMDNToken]
  describe 'authenticate_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authenticate_with_ethereum_challenge
  # @param wallet the wallet which should be authenticated
  # @param [Hash] opts the optional parameters
  # @option opts [JsonMDNOAuthToken] :body Token containing nonce and signate
  # @return [File]
  describe 'authenticate_with_ethereum_challenge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fractal_authentication_url
  # Returns the AUthorization URL to verify a Twitter Accounts.
  # Returns the AUthorization URL to verify a Twitter Accounts
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_fractal_authentication_url test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_nonce_for_ethereum_wallet
  # Returns a nonce for the client which is used as content for the to be created signature.
  # Returns a nonce for the client which is used as content for the to be created signature
  # @param wallet - wallet address as String * @HTTP 417 If the address is not valid
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  # @return [JsonMDNToken]
  describe 'get_nonce_for_ethereum_wallet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_object
  # Used to validate the active connection with the API.
  # Used to validate the active connection with the API
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'get_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_twitter_authentication_url
  # Returns the AUthorization URL to verify a Twitter Accounts.
  # Returns the AUthorization URL to verify a Twitter Accounts
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_twitter_authentication_url test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_facebook_uid
  # Used as Callback URL when users have successfully authorized their facbeook account.
  # Used as Callback URL when users have successfully authorized their facbeook account
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [File]
  describe 'set_facebook_uid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_fractal_uid
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [File]
  describe 'set_fractal_uid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_twitter_uid
  # @param [Hash] opts the optional parameters
  # @option opts [JsonMDNOAuthToken] :body 
  # @return [File]
  describe 'set_twitter_uid test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
