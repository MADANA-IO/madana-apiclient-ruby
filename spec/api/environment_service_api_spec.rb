=begin
#madana-api

#<h1>Using the madana-api</h1>        <p>This documentation contains a Quickstart Guide, relating client functionality and information about the available         endpoints and used datamodels.   </p>       <p> The madana-api and its implementations are still in heavy development. This means that there may be problems in our protocols, or there may be mistakes in our implementations. We take security vulnerabilities very seriously. If you discover a security issue, please bring it to our attention right away! If you find a vulnerability that may affect live deployments -- for example, by exposing a remote execution exploit -- please send your report privately to info@madana.io. Please DO NOT file a public issue. If the issue is a protocol weakness that cannot be immediately exploited or something not yet deployed, just discuss it openly   </p>   <br>   <p> Note: Not all functionality might be acessible without having accquired and api-license token. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a> </p>       <br>

The version of the OpenAPI document: 0.4.14-master.16

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for   MadanaSampleclientRuby::EnvironmentServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EnvironmentServiceApi' do
  before do
    # run before each test
    @api_instance =   MadanaSampleclientRuby::EnvironmentServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EnvironmentServiceApi' do
    it 'should create an instance of EnvironmentServiceApi' do
      expect(@api_instance).to be_instance_of(  MadanaSampleclientRuby::EnvironmentServiceApi)
    end
  end

  # unit tests for delete_environment
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'delete_environment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_environment_subscription
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'delete_environment_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_requests
  # Returns UUIDs of existing analyses.
  # Returns UUIDs of existing analyses.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  # @option opts [String] :created - if Queryparam \&quot;created&#x3D;true\&quot; only the UUIDs of own Requests are shown
  # @option opts [String] :limit Used for offset pagination. Limit/Offset Paging would look like GET /request?limit&#x3D;20&amp;offset&#x3D;100. This query would return the 20 rows starting with the 100th row
  # @option opts [String] :name 
  # @option opts [String] :offset Used for offset pagination. Limit/Offset Paging would look like GET /request?limit&#x3D;20&amp;offset&#x3D;100. This query would return the 20 rows starting with the 100th row
  # @return [File]
  describe 'get_all_requests test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_environment
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_environment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_published_environments
  # @param [Hash] opts the optional parameters
  # @option opts [String] :limit 
  # @option opts [String] :name 
  # @option opts [String] :offset 
  # @return [File]
  describe 'get_published_environments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_subscribed_environments
  # @param [Hash] opts the optional parameters
  # @option opts [String] :limit 
  # @option opts [String] :offset 
  # @return [File]
  describe 'get_subscribed_environments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for publish_environment
  # @param [Hash] opts the optional parameters
  # @option opts [JsonEnvironmentPublishingRequest] :body 
  # @return [File]
  describe 'publish_environment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscribe_environment
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'subscribe_environment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_environment
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @option opts [JsonEnvironment] :body 
  # @return [File]
  describe 'update_environment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
